//print "INT9";

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 9] = 9;


[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 11] * 512 - 1;


alias userSp R0;
userSp = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 13];

alias fileName R1;
fileName = [[PTBR + 2*((userSp - 4)/512)] * 512 + ((userSp - 4)%512)];

alias index R2;
alias inode_table_entry R3;
alias found R4;


index = 0;
found = 0;

while(index < MAX_FILE_NUM) do

	inode_table_entry = INODE_TABLE + (index * 16);
	if([inode_table_entry + 1] == fileName && [inode_table_entry] == EXEC) then
		found = 1;
		break;
	endif;
	
	index = index + 1;
endwhile;

if(found == 0) then
	[[PTBR + 2*((userSp - 1)/512)] * 512 + ((userSp - 1)%512)] = -1;
		
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 9] = 0;
	SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 13];
	ireturn;
endif;


multipush(R1,R2,R3,R4);
R1 = 3;
R2 = [SYSTEM_STATUS_TABLE + 1];
call MOD_1;
multipop(R1,R2,R3,R4);



[MEMORY_FREE_LIST + [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 11]] = 1;
[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;

SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 11] * 512 - 1;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 4] = RUNNING;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 7] = index;

alias ptbr R5;
ptbr = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 14];


//library
[ptbr+0] = 63;
[ptbr+1] = "0100";
[ptbr+2] = 64;
[ptbr+3] = "0100";

//heap

multipush(R1,R2,R3,R4,R5);
R1 = 1;
call MOD_2;
[ptbr+4] = R0;
[ptbr+5] = "0110";
multipop(R1,R2,R3,R4,R5);

multipush(R1,R2,R3,R4,R5);
R1 = 1;
call MOD_2;
[ptbr+6] = R0;
[ptbr+7] = "0110";
multipop(R1,R2,R3,R4,R5);

//Stack

multipush(R1,R2,R3,R4,R5);
R1 = 1;
call MOD_2;
[ptbr+16] = R0;
[ptbr+17] = "0110";
multipop(R1,R2,R3,R4,R5);

multipush(R1,R2,R3,R4,R5);
R1 = 1;
call MOD_2;
[ptbr+18] = R0;
[ptbr+19] = "0110";
multipop(R1,R2,R3,R4,R5);



alias iter R6;
iter = 0;
while(iter < 4) do
	if([INODE_TABLE + (index*16) + 8 + iter] != - 1) then
	
		multipush(R1,R2,R3,R4,R5,R6);
		R1 = 1;
		call MOD_2;
		multipop(R1,R2,R3,R4,R5,R6);
		
		[ptbr+ 8 + 2*iter] = R0;
		[ptbr+ 9 + 2*iter] = "0100";
		
		loadi(R0,[INODE_TABLE + (index*16) + 8 + iter]);
	else
		[ptbr+ 8 + 2*iter] = -1;
		[ptbr+ 9 + 2*iter] = "0000";
	endif;
	
	iter = iter + 1;
endwhile;


[[ptbr + 16] * 512] = [[ptbr + 8] * 512 + 1];



[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 9] = 0;
SP = 8*512;

ireturn;

