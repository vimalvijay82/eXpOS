//seek
if(syscallnum == 6) then
	alias filedesc R6;
	filedesc = [[ptbr + 2 * ((userSP-4)/512)] * 512 + ((userSP - 4) % 512)];
	
	alias offset R7;
	offset = [[ptbr + 2 * ((userSP-3)/512)] * 512 + ((userSP - 3) % 512)];
	
	//change mode flag	
	[pt + 9] = 6;
	alias userpage R8;
	userpage = [pt + 11];
	
	//if file Descriptor is invalid or entry is not a file
	if(filedesc < 0 || filedesc > 7) then
		[retAddr] = -1;
		[pt + 9] = 0;
		SP = [pt+ 13];
		ireturn;
	endif;
	
	//resource identifier does not point to file
	if([((userpage + 1) * 512 ) - 16 + 2*filedesc] == -1 || [((userpage + 1) * 512 ) - 16 + 2*filedesc] != FILE) then
		[retAddr] = -1;
		[pt + 9] = 0;
		SP = [pt+ 13];
		ireturn;
	endif;
	
	alias ft_index R9;
	ft_index = [((userpage+1)*512) - 16 + 2*filedesc + 1];
	
	alias id_index R10;
	id_index = [OPEN_FILE_TABLE + (ft_index*4)];
	
	//Acquire inode
	multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
	R1 = 4;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	R3 = id_index;
	call MOD_0;
	multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
	
	//if fails to acquire lock return -1
	if(R0 == -1) then
		[retAddr] = -1;
		[pt + 9] = 0;
		SP = userSP;
		ireturn;
	endif;
	
	alias lseek R11;
	lseek = [OPEN_FILE_TABLE + (ft_index*4) + 2];
	
	//get file size
	alias fl_size R12;
	if(id_index == INODE_ROOT) then
		fl_size = 480;
	else
		fl_size = [INODE_TABLE + (id_index*16) + 2];
	endif;
	
	//lseek value error
	if(lseek + offset < 0) then
		multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
		R1 = 5;
		R2 = [SYSTEM_STATUS_TABLE + 1];
		R3 = id_index;
		call MOD_0;
		multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
		
		[retAddr] = -2;
		[pt + 9] = 0;
		SP = userSP;
		ireturn;
	endif;
	
	//set lseek accordingly
	if(offset == 0) then
		[OPEN_FILE_TABLE + (ft_index*4) + 2] = 0;
	else
		if(lseek + offset > fl_size) then
			[OPEN_FILE_TABLE + (ft_index*4) + 2] = fl_size;
		else
			[OPEN_FILE_TABLE + (ft_index*4) + 2] = lseek+offset;
		endif;
	endif;
	
	//release inode
	multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
	R1 = 5;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	R3 = id_index;
	call MOD_0;
	multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12);
		
	[retAddr] = 0;
	[pt + 9] = 0;
	SP = userSP;
	ireturn;
endif;
